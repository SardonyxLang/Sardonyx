#!/usr/bin/ruby
require "sdx/compiler/parser"
require "sdx/compiler/compiler"
require "sdx/vm/vm"
require "stringio"

if ARGV.size == 1
    path = [(File.expand_path File.dirname ARGV[0]), *(ENV.fetch("SDX_PATH", "").split ":")]
    code = File.read ARGV[0]
    lexed = Parser::Lexer.lex code
    ast = Parser::Parser.parse lexed, path
    bc = Compiler::Compiler.compile ast
    vm = VM.new StringIO.new bc
    vm.interpret
else
    path = [(File.expand_path Dir.pwd), *(ENV.fetch("SDX_PATH", "").split ":")]
    vm = VM.new StringIO.new ""
    puts "Sardonyx v0.2"
    def exit(_) end
    loop do
        print "> "
        code = gets
        lexed = Parser::Lexer.lex code
        ast = Parser::Parser.parse lexed, path
        bc = Compiler::Compiler.compile ast
        vm.bc_io = StringIO.new bc
        vm.byte_pos = 0
        vm.interpret false
        val = vm.stack[-1]
        vm.clear
        if val
            puts vm.stringify val
        end
    end
end
